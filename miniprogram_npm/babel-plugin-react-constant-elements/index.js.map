{"version":3,"sources":["index.js"],"names":[],"mappings":";;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.js","sourcesContent":["\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports[\"default\"] = function (_ref) {\n  var Plugin = _ref.Plugin;\n\n  var immutabilityVisitor = {\n    enter: function enter(node, parent, scope, state) {\n      var _this = this;\n\n      var stop = function stop() {\n        state.isImmutable = false;\n        _this.stop();\n      };\n\n      if (this.isJSXClosingElement()) {\n        this.skip();\n        return;\n      }\n\n      if (this.isJSXIdentifier({ name: \"ref\" }) && this.parentPath.isJSXAttribute({ name: node })) {\n        return stop();\n      }\n\n      if (this.isJSXIdentifier() || this.isIdentifier() || this.isJSXMemberExpression()) {\n        return;\n      }\n\n      if (!this.isImmutable()) stop();\n    }\n  };\n\n  return new Plugin(\"react-constant-elements\", {\n    metadata: {\n      group: \"builtin-basic\"\n    },\n\n    visitor: {\n      JSXElement: function JSXElement(node) {\n        if (node._hoisted) return;\n\n        var state = { isImmutable: true };\n        this.traverse(immutabilityVisitor, state);\n\n        if (state.isImmutable) {\n          this.hoist();\n        } else {\n          node._hoisted = true;\n        }\n      }\n    }\n  });\n};\n\nmodule.exports = exports[\"default\"];"]}