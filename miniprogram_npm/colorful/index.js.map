{"version":3,"sources":["index.js","lib/ansi.js"],"names":[],"mappings":";;;;;;;AAAA;AACA;AACA;AACA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.js","sourcesContent":["exports = module.exports = require('./lib/ansi');\n\nexports.paint = function(text) {\n  return new exports.Color(text);\n};\n\nexports.colorful = function() {\n  // don't overwrite\n  if (String.prototype.to) return;\n  Object.defineProperty(String.prototype, 'to', {\n    get: function() {\n      return new exports.Color(this.valueOf());\n    }\n  });\n};\n\nexports.toxic = function() {\n  // poison the String prototype\n  var colors = exports.color;\n  Object.keys(colors).forEach(function(key) {\n    var fn = colors[key];\n    Object.defineProperty(String.prototype, key, {\n      get: function() {\n        return fn(this.valueOf());\n      }\n    });\n  });\n};\n\nObject.defineProperty(exports, 'isSupported', {\n  get: exports.isColorSupported\n});\n","\n/* ANSI color support in terminal\n * @author: Hsiaoming Yang <lepture@me.com>\n *\n * http://en.wikipedia.org/wiki/ANSI_escape_code\n */\n\n\nvar util = require('util');\nvar tty = require('tty');\n\nexports.disabled = false;\nexports.isatty = false;\n\nfunction isColorSupported() {\n  if (exports.disabled) return false;\n\n  // you can force to tty\n  if (!exports.isatty && !tty.isatty()) return false;\n\n  if ('COLORTERM' in process.env) return true;\n  // windows will support color\n  if (process.platform === 'win32') return true;\n\n  var term = process.env.TERM;\n  if (!term) return false;\n\n  term = term.toLowerCase();\n  if (term.indexOf('color') !== -1) return true;\n  return term === 'xterm' || term === 'linux';\n}\n\n\nfunction is256ColorSupported() {\n  if (!isColorSupported()) return false;\n\n  var term = process.env.TERM;\n  if (!term) return false;\n\n  term = term.toLowerCase();\n  return term.indexOf('256') !== -1;\n}\nexports.isColorSupported = isColorSupported;\nexports.is256ColorSupported = is256ColorSupported;\n\nvar colors = [\n  'black', 'red', 'green', 'yellow', 'blue',\n  'magenta', 'cyan', 'white'\n];\n\nvar styles = [\n  'bold', 'faint', 'italic', 'underline', 'blink', 'overline',\n  'inverse', 'conceal', 'strike'\n];\n\nexports.color = {};\n\nfunction Color(obj) {\n  this.string = obj;\n\n  this.styles = [];\n  this.fgcolor = null;\n  this.bgcolor = null;\n}\nutil.inherits(Color, String);\n\nfor (var i = 0; i < colors.length; i++) {\n  (function(i) {\n    var name = colors[i];\n    Object.defineProperty(Color.prototype, name, {\n      get: function() {\n        this.fgcolor = i;\n        return this;\n      }\n    });\n    Object.defineProperty(Color.prototype, name + '_bg', {\n      get: function() {\n        this.bgcolor = i;\n        return this;\n      }\n    });\n    exports.color[name] = exports[name] = function(text) {\n      if (!isColorSupported()) return text;\n      return '\\x1b[' + (30 + i) + 'm' + text + '\\x1b[0m';\n    };\n    exports.color[name + '_bg'] = exports[name + '_bg'] = function(text) {\n      if (!isColorSupported()) return text;\n      return '\\x1b[' + (40 + i) + 'm' + text + '\\x1b[0m';\n    };\n  })(i);\n}\nfor (var i = 0; i < styles.length; i++) {\n  (function(i) {\n    var name = styles[i];\n    Object.defineProperty(Color.prototype, name, {\n      get: function() {\n        if (this.styles.indexOf(i) === -1) {\n          this.styles = this.styles.concat(i + 1);\n        }\n        return this;\n      }\n    });\n    exports.color[name] = exports[name] = function(text) {\n      if (!isColorSupported()) return text;\n      return '\\x1b[' + (i + 1) + 'm' + text + '\\x1b[0m';\n    };\n  })(i);\n}\n\nexports.color.grey = exports.color.gray = exports.grey = exports.gray = function(text) {\n  if (!isColorSupported()) return text;\n  if (is256ColorSupported()) {\n    return '\\x1b[38;5;8m' + text + '\\x1b[0m';\n  }\n  return '\\x1b[30;1m' + text + '\\x1b[0m';\n};\nObject.defineProperty(Color.prototype, 'gray', {\n  get: function() {\n    if (isColorSupported) {\n      this.fgcolor = 8;\n    } else {\n      this.styles = this.styles.concat(1);\n      this.fgcolor = 0;\n    }\n    return this;\n  }\n});\nObject.defineProperty(Color.prototype, 'grey', {\n  get: function() {\n    if (isColorSupported) {\n      this.fgcolor = 8;\n    } else {\n      this.styles = this.styles.concat(1);\n      this.fgcolor = 0;\n    }\n    return this;\n  }\n});\n\n\nColor.prototype.valueOf = function() {\n  if (!isColorSupported()) return this.string;\n  var is256 = is256ColorSupported();\n\n  var text = this.string;\n  var reset = '\\x1b[0m';\n\n  if (is256) {\n    if (this.fgcolor !== null) {\n      text = '\\x1b[38;5;' + this.fgcolor + 'm' + text + reset;\n    }\n    if (this.bgcolor !== null) {\n      text = '\\x1b[48;5;' + this.bgcolor + 'm' + text + reset;\n    }\n  } else {\n    if (this.fgcolor !== null && this.fgcolor < 8) {\n      text = '\\x1b[' + (30 + this.fgcolor) + 'm' + text + reset;\n    }\n    if (this.bgcolor !== null && this.bgcolor < 8) {\n      text = '\\x1b[' + (40 + this.bgcolor) + 'm' + text + reset;\n    }\n  }\n  if (this.styles.length) {\n    text = '\\x1b[' + this.styles.join(';') + 'm' + text + reset;\n  }\n  return text;\n};\nColor.prototype.toString = function() {\n  return this.valueOf();\n};\nObject.defineProperty(Color.prototype, 'color', {\n  get: function() {\n    return this.valueOf();\n  }\n});\nObject.defineProperty(Color.prototype, 'style', {\n  get: function() {\n    return this.valueOf();\n  }\n});\nObject.defineProperty(Color.prototype, 'length', {\n  get: function() {\n    return this.string.length;\n  }\n});\n\nexports.Color = Color;\n"]}